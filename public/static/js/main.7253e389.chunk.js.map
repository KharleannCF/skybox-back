{"version":3,"sources":["logo.svg","views/index/logic/formLogic.js","views/index/Index.jsx","views/Scene/Scene.jsx","router/index.js","App.js","reportWebVitals.js","index.js"],"names":["e","a","preventDefault","text","document","getElementById","front","right","back","left","top","bottom","formData","FormData","append","value","files","axios","post","headers","response","console","log","getScenes","setter","get","scenes","data","Index","useState","setScenes","useEffect","Form","onSubmit","handleSubmit","Group","Control","type","id","placeholder","File","label","map","elem","to","extend","OrbitControls","CameraControls","useThree","camera","domElement","gl","controls","useRef","useFrame","current","update","ref","args","autoRotate","enableZoom","SkyBox","images","setImage","sceneName","window","location","href","split","pop","getImages","scene","texture","CubeTextureLoader","load","background","Scene","className","Router","props","onUpdate","scrollTo","exact","path","component","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qNAAe,I,uJCER,WAA4BA,GAA5B,+BAAAC,EAAA,6DACND,EAAEE,iBACIC,EAAOC,SAASC,eAAe,QAC/BC,EAAQF,SAASC,eAAe,SAChCE,EAAQH,SAASC,eAAe,SAChCG,EAAOJ,SAASC,eAAe,QAC/BI,EAAOL,SAASC,eAAe,QAC/BK,EAAMN,SAASC,eAAe,OAC9BM,EAASP,SAASC,eAAe,WACjCO,EAAW,IAAIC,UACZC,OAAO,OAAQX,EAAKY,OAC7BH,EAASE,OAAO,QAASR,EAAMU,MAAM,IACrCJ,EAASE,OAAO,QAASP,EAAMS,MAAM,IACrCJ,EAASE,OAAO,OAAQN,EAAKQ,MAAM,IACnCJ,EAASE,OAAO,OAAQL,EAAKO,MAAM,IACnCJ,EAASE,OAAO,MAAOJ,EAAIM,MAAM,IACjCJ,EAASE,OAAO,SAAUH,EAAOK,MAAM,IAhBjC,UAiBiBC,IAAMC,KAAK,UAAWN,EAAU,CACtDO,QAAS,CACR,eAAgB,yBAnBZ,QAiBAC,EAjBA,OAsBNC,QAAQC,IAAIF,GAtBN,6C,sBAyBA,SAAeG,EAAtB,kC,4CAAO,WAAyBC,GAAzB,eAAAvB,EAAA,sEACegB,IAAMQ,IAAI,eADzB,OACAC,EADA,OAENF,EAAOE,EAAOC,KAAKD,QAFb,4C,iCCQQE,MA/Bf,WAAiB,IAAD,EACgBC,mBAAS,IADzB,mBACLH,EADK,KACGI,EADH,KAKZ,OAHAC,oBAAS,sBAAC,sBAAA9B,EAAA,sDACNsB,EAAUO,GADJ,2CAER,IAEE,gCACI,iDACA,eAACE,EAAA,EAAD,CAAMC,SAAU,SAACjC,IDVtB,SAAP,2BCUkCkC,CAAalC,IAAnC,UACI,eAACgC,EAAA,EAAKG,MAAN,WACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOC,GAAG,OAAOC,YAAY,8BAC5C,cAACP,EAAA,EAAKQ,KAAN,CAAWF,GAAG,QAAQG,MAAM,WAC5B,cAACT,EAAA,EAAKQ,KAAN,CAAWF,GAAG,QAAQG,MAAM,YAC5B,cAACT,EAAA,EAAKQ,KAAN,CAAWF,GAAG,OAAOG,MAAM,UAC3B,cAACT,EAAA,EAAKQ,KAAN,CAAWF,GAAG,OAAOG,MAAM,cAC3B,cAACT,EAAA,EAAKQ,KAAN,CAAWF,GAAG,MAAMG,MAAM,WAC1B,cAACT,EAAA,EAAKQ,KAAN,CAAWF,GAAG,SAASG,MAAM,aAEjC,6CAEJ,8BACI,6BACKf,EAASA,EAAOgB,KAAI,SAAAC,GACjB,OAAQ,6BAAI,cAAC,IAAD,CAAMC,GAAE,iBAAYD,GAApB,SAA6BA,SACzC,a,6BClBxBE,YAAO,CAAEC,oBAYT,IAAMC,EAAiB,WAAO,IAAD,EAKvBC,cAFFC,EAHyB,EAGzBA,OACMC,EAJmB,EAIzBC,GAAMD,WAGFE,EAAWC,mBAEjB,OADAC,aAAS,kBAAMF,EAASG,QAAQC,YAE9B,+BACEC,IAAKL,EACLM,KAAM,CAACT,EAAQC,GACfS,YAAY,EACZC,YAAY,KAMlB,SAASC,IAAU,IAAD,EACWhC,mBAAS,IADpB,mBACTiC,EADS,KACDC,EADC,KAEVC,EAAYC,OAAOC,SAASC,KAAKC,MAAM,KAAKC,MAClDtC,oBAAS,sBAAC,4BAAA9B,EAAA,sEACgBgB,IAAMQ,IAAN,gCAAmCuC,IADnD,OACFM,EADE,OAERP,EAASO,EAAU3C,KAAKD,QAFhB,2CAGP,IANa,IAQR6C,EAAUvB,cAAVuB,MAGFC,GAFS,IAAIC,qBAEIC,KAAK,CAAC,GAAD,OACvBZ,EAAOvD,OADgB,UAEvBuD,EAAOrD,MAFgB,UAGvBqD,EAAOpD,KAHgB,UAIvBoD,EAAOnD,QAJgB,UAKvBmD,EAAOxD,OALgB,UAMvBwD,EAAOtD,QAKZ,OADA+D,EAAMI,WAAaH,EACZ,KAeMI,MATf,WACE,OACE,eAAC,IAAD,CAAQC,UAAU,SAAlB,UACE,cAAC,EAAD,IACA,cAAChB,EAAD,QCtDSiB,E,4JAdb,SAAOC,GACL,OACE,cAAC,WAAD,UACE,cAAC,IAAD,CAAeC,SAAU,kBAAMf,OAAOgB,SAAS,EAAG,IAAlD,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxD,IACjC,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,aAAaC,UAAWR,e,GAPjCS,aCGNC,MAJf,WACE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9F,SAASC,eAAe,SAM1BkF,M","file":"static/js/main.7253e389.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nexport async function handleSubmit(e) {\r\n\te.preventDefault();\r\n\tconst text = document.getElementById(\"text\");\r\n\tconst front = document.getElementById(\"front\");\r\n\tconst right = document.getElementById(\"right\");\r\n\tconst back = document.getElementById(\"back\");\r\n\tconst left = document.getElementById(\"left\");\r\n\tconst top = document.getElementById(\"top\");\r\n\tconst bottom = document.getElementById(\"bottom\");\r\n\tconst formData = new FormData();\r\n\tformData.append(\"text\", text.value);\r\n\tformData.append(\"front\", front.files[0]);\r\n\tformData.append(\"right\", right.files[0]);\r\n\tformData.append(\"back\", back.files[0]);\r\n\tformData.append(\"left\", left.files[0]);\r\n\tformData.append(\"top\", top.files[0]);\r\n\tformData.append(\"bottom\", bottom.files[0]);\r\n\tconst response = await axios.post(\"/upload\", formData, {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t},\r\n\t});\r\n\tconsole.log(response);\r\n}\r\n\r\nexport async function getScenes(setter) {\r\n\tconst scenes = await axios.get(\"/api/scenes\");\r\n\tsetter(scenes.data.scenes);\r\n}\r\n","import React, {useState, useEffect} from \"react\"\r\nimport {Form} from \"react-bootstrap\"\r\nimport {handleSubmit, getScenes} from \"./logic/formLogic\"\r\nimport {Link} from \"react-router-dom\"\r\nfunction Index(){\r\n    const [scenes, setScenes] = useState([])\r\n    useEffect(async ()=>{\r\n        getScenes(setScenes)\r\n    },[])\r\n    return(\r\n        <div>\r\n            <h1>Upload 6 images</h1>\r\n            <Form onSubmit={(e)=>{handleSubmit(e)}}>\r\n                <Form.Group>\r\n                <Form.Control type=\"text\" id=\"text\" placeholder=\"Enter name of the project\" />\r\n                    <Form.File id=\"front\" label=\"Frente\" />\r\n                    <Form.File id=\"right\" label=\"Derecha\" />\r\n                    <Form.File id=\"back\" label=\"atras\" />\r\n                    <Form.File id=\"left\" label=\"izquierda\" />\r\n                    <Form.File id=\"top\" label=\"arriba\" />\r\n                    <Form.File id=\"bottom\" label=\"abajo\" />\r\n                </Form.Group>\r\n                <button>Send</button>\r\n            </Form>\r\n            <div>\r\n                <ul>\r\n                    {scenes ? scenes.map(elem=>{\r\n                        return (<li><Link to={`/scene/${elem}`}>{elem}</Link></li>)\r\n                    }): null}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { Canvas, extend, useThree, useFrame } from \"react-three-fiber\";\r\nimport {\r\n  CubeTextureLoader,\r\n\r\n} from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\n\r\nextend({ OrbitControls });\r\n/*\r\nwindow.addEventListener(\"devicemotion\", function(event){\r\n  if(event.rotationRate.alpha || event.rotationRate.beta || event.rotationRate.gamma){\r\n      let gyroPresent = true;\r\n      //alert(\"this is a motherfucker test\")}\r\n});\r\n*/\r\n//console.log(\"======================\", window.location)\r\n\r\n\r\n\r\nconst CameraControls = () => {\r\n\r\n  const {\r\n    camera,\r\n    gl: { domElement }\r\n  } = useThree();\r\n\r\n  const controls = useRef();\r\n  useFrame(() => controls.current.update());\r\n  return (\r\n    <orbitControls\r\n      ref={controls}\r\n      args={[camera, domElement]}\r\n      autoRotate={false}\r\n      enableZoom={false}\r\n    />\r\n  );\r\n};\r\n\r\n// Loads the skybox texture and applies it to the scene.\r\nfunction SkyBox() {\r\n  const [images, setImage] = useState({})\r\n  const sceneName = window.location.href.split(\"/\").pop()\r\n  useEffect(async () => {\r\n    const getImages = await axios.get(`/api/scenes/getimages/${sceneName}`)\r\n    setImage(getImages.data.scenes)\r\n  }, [])\r\n\r\n  const { scene } = useThree();\r\n  const loader = new CubeTextureLoader();\r\n  // The CubeTextureLoader load method takes an array of urls representing all 6 sides of the cube.\r\n  const texture = loader.load([\r\n    `${images.right}`,\r\n    `${images.left}`,\r\n    `${images.top}`,\r\n    `${images.bottom}`,\r\n    `${images.front}`,\r\n    `${images.back}`\r\n  ]);\r\n\r\n  // Set the scene background property to the resulting texture.\r\n  scene.background = texture;\r\n  return null;\r\n}\r\n\r\n\r\n\r\n// Lights\r\nfunction Scene() {\r\n  return (\r\n    <Canvas className=\"canvas\">\r\n      <CameraControls />\r\n      <SkyBox />\r\n    </Canvas>\r\n  );\r\n}\r\n\r\nexport default Scene;\r\n\r\n\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Index from \"../views/index/Index\";\r\nimport Scene from \"../views/Scene/Scene\";\r\n\r\nclass Router extends Component {\r\n  render(props) {\r\n    return (\r\n      <Fragment>\r\n        <BrowserRouter onUpdate={() => window.scrollTo(0, 0)}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Index} />\r\n            <Route exact path=\"/scene/:id\" component={Scene} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Router from \"./router/index\";\n\nfunction App() {\n  return <Router />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}