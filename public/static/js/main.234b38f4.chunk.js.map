{"version":3,"sources":["views/index/logic/formLogic.js","views/index/Index.jsx","views/Scene/Scene.jsx","router/index.js","App.js","reportWebVitals.js","index.js"],"names":["e","a","preventDefault","text","document","getElementById","front","right","back","left","top","bottom","formData","FormData","append","value","files","axios","post","headers","response","console","log","setter","get","scenes","data","Index","useState","setScenes","useEffect","getScenes","Form","onSubmit","handleSubmit","Group","Control","type","id","placeholder","File","label","map","elem","to","extend","OrbitControls","DeviceOrientationControls","CameraControls","useThree","camera","domElement","gl","controls","useRef","useFrame","current","update","ref","args","autoRotate","enableZoom","CameraControls2","controls2","SkyBox","images","setImage","sceneName","window","location","href","split","pop","getImages","fetchData","scene","texture","CubeTextureLoader","load","background","Scene","className","test","navigator","userAgent","Router","props","onUpdate","scrollTo","exact","path","component","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.234b38f4.chunk.js","sourcesContent":["import axios from \"axios\";\r\nexport async function handleSubmit(e) {\r\n\te.preventDefault();\r\n\tconst text = document.getElementById(\"text\");\r\n\tconst front = document.getElementById(\"front\");\r\n\tconst right = document.getElementById(\"right\");\r\n\tconst back = document.getElementById(\"back\");\r\n\tconst left = document.getElementById(\"left\");\r\n\tconst top = document.getElementById(\"top\");\r\n\tconst bottom = document.getElementById(\"bottom\");\r\n\tconst formData = new FormData();\r\n\tformData.append(\"text\", text.value);\r\n\tformData.append(\"front\", front.files[0]);\r\n\tformData.append(\"right\", right.files[0]);\r\n\tformData.append(\"back\", back.files[0]);\r\n\tformData.append(\"left\", left.files[0]);\r\n\tformData.append(\"top\", top.files[0]);\r\n\tformData.append(\"bottom\", bottom.files[0]);\r\n\tconst response = await axios.post(\"/upload\", formData, {\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t},\r\n\t});\r\n\tconsole.log(response);\r\n}\r\n\r\nexport async function getScenes(setter) {\r\n\tconst scenes = await axios.get(\"/api/scenes\");\r\n\tsetter(scenes.data.scenes);\r\n}\r\n","import React, {useState, useEffect} from \"react\"\r\nimport {Form} from \"react-bootstrap\"\r\nimport {handleSubmit, getScenes} from \"./logic/formLogic\"\r\nimport {Link} from \"react-router-dom\"\r\nfunction Index(){\r\n    const [scenes, setScenes] = useState([])\r\n    useEffect(()=>{\r\n        getScenes(setScenes)\r\n    },[])\r\n    return(\r\n        <div>\r\n            <h1>Upload 6 images</h1>\r\n            <Form onSubmit={(e)=>{handleSubmit(e)}}>\r\n                <Form.Group>\r\n                <Form.Control type=\"text\" id=\"text\" placeholder=\"Enter name of the project\" />\r\n                    <Form.File id=\"front\" label=\"Frente\" />\r\n                    <Form.File id=\"right\" label=\"Derecha\" />\r\n                    <Form.File id=\"back\" label=\"atras\" />\r\n                    <Form.File id=\"left\" label=\"izquierda\" />\r\n                    <Form.File id=\"top\" label=\"arriba\" />\r\n                    <Form.File id=\"bottom\" label=\"abajo\" />\r\n                </Form.Group>\r\n                <button>Send</button>\r\n            </Form>\r\n            <div>\r\n                <ul>\r\n                    {scenes ? scenes.map(elem=>{\r\n                        return (<li><Link to={`/scene/${elem}`}>{elem}</Link></li>)\r\n                    }): null}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index","import React, { useRef, useEffect, useState } from \"react\";\r\nimport { Canvas, extend, useThree, useFrame } from \"react-three-fiber\";\r\nimport { CubeTextureLoader } from \"three\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { DeviceOrientationControls } from \"three/examples/jsm/controls/DeviceOrientationControls\";\r\nimport \"./style.css\";\r\nimport axios from \"axios\";\r\n\r\nextend({ OrbitControls });\r\nextend({ DeviceOrientationControls });\r\n/*\r\nwindow.addEventListener(\"devicemotion\", function(event){\r\n  if(event.rotationRate.alpha || event.rotationRate.beta || event.rotationRate.gamma){\r\n      let gyroPresent = true;\r\n      //alert(\"this is a motherfucker test\")}\r\n});\r\n*/\r\n//console.log(\"======================\", window.location)\r\n\r\nconst CameraControls = () => {\r\n\tconst {\r\n\t\tcamera,\r\n\t\tgl: { domElement },\r\n\t} = useThree();\r\n\r\n\tconst controls = useRef();\r\n\tuseFrame(() => controls.current.update());\r\n\treturn (\r\n\t\t<orbitControls\r\n\t\t\tref={controls}\r\n\t\t\targs={[camera, domElement]}\r\n\t\t\tautoRotate={false}\r\n\t\t\tenableZoom={false}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nconst CameraControls2 = () => {\r\n\tconst {\r\n\t\tcamera,\r\n\t\tgl: { domElement },\r\n\t} = useThree();\r\n\r\n\tconst controls2 = useRef();\r\n\tuseFrame(() => controls2.current.update());\r\n\treturn (\r\n\t\t<deviceOrientationControls\r\n\t\t\tref={controls2}\r\n\t\t\targs={[camera]}\r\n\t\t\tautoRotate={false}\r\n\t\t\tenableZoom={false}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\n// Loads the skybox texture and applies it to the scene.\r\nfunction SkyBox() {\r\n\tconst [images, setImage] = useState({});\r\n\tuseEffect(() => {\r\n    async function fetchData() {\r\n      const sceneName = window.location.href.split(\"/\").pop();\r\n\t\t\tconst getImages = await axios.get(\r\n\t\t\t\t`/api/scenes/getimages/${sceneName}`\r\n\t\t\t);\r\n\t\t\tsetImage(getImages.data.scenes);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst { scene } = useThree();\r\n\tconst loader = new CubeTextureLoader();\r\n\t// The CubeTextureLoader load method takes an array of urls representing all 6 sides of the cube.\r\n\tconst texture = loader.load([\r\n\t\t`${images.right}`,\r\n\t\t`${images.left}`,\r\n\t\t`${images.top}`,\r\n\t\t`${images.bottom}`,\r\n\t\t`${images.front}`,\r\n\t\t`${images.back}`,\r\n\t]);\r\n\r\n\t// Set the scene background property to the resulting texture.\r\n\tscene.background = texture;\r\n\treturn null;\r\n}\r\n\r\n// Lights\r\nfunction Scene() {\r\n\treturn (\r\n\t\t<Canvas className=\"canvas\">\r\n\t\t\t{/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n\t\t\t\tnavigator.userAgent\r\n\t\t\t) ? (\r\n\t\t\t\t<CameraControls2 />\r\n\t\t\t) : (\r\n\t\t\t\t<CameraControls />\r\n\t\t\t)}\r\n\t\t\t<SkyBox />\r\n\t\t</Canvas>\r\n\t);\r\n}\r\n\r\nexport default Scene;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Index from \"../views/index/Index\";\r\nimport Scene from \"../views/Scene/Scene\";\r\n\r\nclass Router extends Component {\r\n  render(props) {\r\n    return (\r\n      <Fragment>\r\n        <BrowserRouter onUpdate={() => window.scrollTo(0, 0)}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Index} />\r\n            <Route exact path=\"/scene/:id\" component={Scene} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","import \"./App.css\";\nimport Router from \"./router/index\";\n\nfunction App() {\n  return <Router />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}